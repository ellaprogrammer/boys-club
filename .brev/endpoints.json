[{"archived": false, "code": "\nimport variables\nimport shared\nimport sms\n\ndef get(greeting):\n  return { f\"{greeting} success!\" }\n\nfrom typing import Optional\nfrom pydantic import BaseModel\nfrom global_storage import storage_context\n\n# type definition of incoming JSON body\nclass Sport(BaseModel):\n  sport1: str\n  team1: str\n  live: str\n  summary: str\n  culture: str\n\nclass User(BaseModel):\n  \"\"\"\n  Description\n  \"\"\"\n  name: str\n  phone: str\n  # email: Optional[str]\n  # sport: Optional[Sport] \n  class Config:\n    title = 'Main'\n\n# pass it in to function\nfrom fastapi.responses import JSONResponse\nfrom twilio.rest import Client\n\ndef post(user: User, user_store = storage_context(\"users\")):\n  user_store[user.phone] = user.dict()\n  client = Client(variables.ACCOUNT_SID, variables.TWILIO_AUTH_TOKEN)\n  message = client.messages \\\n    .create(\n        body=\"welcome to the boysclub\",\n        from_='+14153580188',\n        to=user.phone\n    )\n\n  print(message.sid)\n  # sms.send(user.phone, \"Welcome to the boysclub.\")\n  # return {\n  #   \"status\": f\"{user.name} says hi!\"\n  # }\n  return JSONResponse(status_code=201, content={\"status\": f\"{user.name} success.\"})\n\n\n", "create_date": "2020-12-30T18:15:53.955194+00:00", "id": "ep-b1d1a600-b316-4695-aabc-81fb46db6b81", "methods": [], "name": "test", "namespace": "9lfthysp", "project_id": "proj-37259d35-141f-42fb-bfce-6582a0085c22", "uri": "/api/test"}, {"archived": false, "code": "\n\nimport variables\nimport shared\nimport sms\nfrom fastapi.responses import JSONResponse\nfrom twilio.rest import Client\nfrom typing import Optional\nfrom pydantic import BaseModel\nfrom global_storage import storage_context\n\ndef get(greeting):\n  # sms.send(\"8185851298\", \"hello from brev sms\")\n  return { f\"{greeting} brev!\" }\n\n\n# type definition of incoming JSON body\nclass Sport(BaseModel):\n  sport1: str\n  team1: str\n  live: str\n  summary: str\n  culture: str\n\nclass User(BaseModel):\n  \"\"\"\n  Description\n  \"\"\"\n  name: str\n  phone: str\n  # email: Optional[str]\n  # sport: Optional[Sport] \n  class Config:\n    title = 'Main'\n\ndef post(user: User, user_store = storage_context(\"users\")):\n  user_store[user.phone] = user.dict()\n  client = Client(variables.ACCOUNT_SID, variables.TWILIO_AUTH_TOKEN)\n  # Send to everyone in users Collection.\n  for user_id in user_store:\n    message = client.messages \\\n      .create(\n          body=\"membership.\",\n          from_='+14153580188',\n          to=user_store[user_id][\"phone\"]\n      )\n\n  print(message.sid)\n  # sms.send(user.phone, \"Welcome to the boysclub.\")\n  # return {\n  #   \"status\": f\"{user.name} says hi!\"\n  # }\n  return JSONResponse(status_code=201, content={\"status\": f\"success.\"})\n\n\n", "create_date": "2021-01-04T21:27:22.693447+00:00", "id": "ep-4121faee-2f58-430d-81f4-5725517dc8e3", "methods": [], "name": "subscribers_all", "namespace": "9lfthysp", "project_id": "proj-37259d35-141f-42fb-bfce-6582a0085c22", "uri": "/api/subscribers_all"}, {"archived": false, "code": "\nimport variables\nimport shared\nimport sms\nfrom typing import Optional\nfrom pydantic import BaseModel\nfrom global_storage import storage_context\nfrom fastapi.responses import JSONResponse\nfrom twilio.rest import Client\n\ndef get(response):\n  if response == \"\ud83d\udc4d\": # do we need all the shades?\n    return { f\"positive feedback\" }\n  elif response == \"\ud83d\udc4e\":\n    return { f\"negative feedback\" }\n  else:\n    return { f\"response: {response}!\" }\n\n# type definition of incoming JSON body\nclass Sport(BaseModel):\n  sport1: str\n  team1: str\n  live: str\n  summary: str\n  culture: str\n\nclass User(BaseModel):\n  \"\"\"\n  Description\n  \"\"\"\n  name: str\n  phone: str\n  # email: Optional[str]\n  # sport: Optional[Sport] \n  class Config:\n    title = 'Main'\n\n# POST webhook on website\ndef post(user: User, user_store = storage_context(\"users\")):\n  user_store[user.phone] = user.dict()\n  client = Client(variables.ACCOUNT_SID, variables.TWILIO_AUTH_TOKEN)\n  message = client.messages \\\n    .create(\n        body=\"Welcome to the BOYS.CLUB, where you get the latest on all things that you\u2019d rather us cover for you. No more boys club talk that keeps you out of the conversation. \\n \ud83e\udd4a Here a few things you can expect from us: \\n \ud83c\udfc0 The latest buzz on all things pop culture for featured games, so you know what people are laughing about in your Tuesday morning meetings. \\n \ud83c\udfc8 Headlines, close games, and players to know about (yes this will include photos of Jimmy G \ud83d\udd25). \\n \u26bd\ufe0f Important upcoming dates, so you\u2019re never stuck asking if anyone has weekend plans on the Friday before the Super Bowl (ouch, we\u2019ve all been there). \\n \u26be\ufe0f Interactive engagement on your side, send us a \ud83d\udc4d or \ud83d\udc4e for a quick pulse check on how our updates are sitting with you, send us \u2018MORE\u2019 and if we\u2019ve got it, we\u2019ll send follow up articles or tweets for more info, and of course \u2018STOP\u2019 at any time to end your boys.club membership.\",\n        from_='+14153580188',\n        status_callback='https://9lfthysp.brev.dev/api/signup_welcome',\n        to=user.phone\n      )\n\n  print(message.sid)\n  # sms.send(user.phone, \"Welcome to the boysclub.\")\n  # return {\n  #   \"status\": f\"{user.name} says hi!\"\n  # }\n  return JSONResponse(status_code=201, content={\"status\": f\"{user.name} success.\"})\n\n\n", "create_date": "2021-01-04T21:27:44.689712+00:00", "id": "ep-eb059bf2-d6ec-45c5-86af-05a3eab6f131", "methods": [], "name": "signup_welcome", "namespace": "9lfthysp", "project_id": "proj-37259d35-141f-42fb-bfce-6582a0085c22", "uri": "/api/signup_welcome"}, {"archived": false, "code": "import variables\nimport shared\nimport sms\nfrom pydantic import BaseModel\nfrom global_storage import storage_context\nfrom twilio.rest import Client\nimport datetime\nfrom fastapi.responses import JSONResponse\nfrom typing import Optional\n\ndef add_value_to_responses_dict(dict_obj, key, value):\n    # Check if key exist in dict or not\n    if key in dict_obj:\n        # Key exist in dict.\n        # Check if type of value of key is list or not\n        if not isinstance(dict_obj[key], list):\n            # If type is not list then make it list\n            dict_obj[key] = [dict_obj[key]]\n        # Append the value in list\n        dict_obj[key].append(\"DATE/TIME: \" + str(datetime.datetime.now()) + \" BODY: \" + value)\n    else:\n        # As key is not in dict,\n        # so, add key-value pair and add them to Users dict\n        dict_obj[key] = str(datetime.datetime.now()) + value\n\ndef new_user(dict_obj, key):\n  if key in dict_obj:\n    return False\n  else:\n    return True\n    \n\nclass IncomingText(BaseModel):\n  ToCountry: str\n  ToState: str\n  SmsMessageSid: str\n  NumMedia: str\n  ToCity: str\n  FromZip: str\n  SmsSid: str\n  FromState: str\n  SmsStatus: str\n  FromCity: str\n  Body: str\n  FromCountry: str\n  To: str\n  ToZip: str\n  NumSegments: str\n  MessageSid: str\n  AccountSid: str\n  From: str\n  ApiVersion: str\n\nclass User(BaseModel):\n  \"\"\"\n  Description\n  \"\"\"\n  name: Optional[str]\n  phone: Optional[str]\n  # email: Optional[str]\n  # sport: Optional[Sport] \n  class Config:\n    title = 'Main'\n\n# Hook for incoming texts\ndef get(ToCountry: str, ToState: str, SmsMessageSid: str, NumMedia: str, ToCity: str, FromZip: str, SmsSid: str, FromState: str, SmsStatus: str, FromCity: str, Body: str, FromCountry: str, To: str, ToZip: str, NumSegments: str, MessageSid: str, AccountSid: str, From: str, ApiVersion: str, incoming_texts_store = storage_context(\"incoming_texts\"), user_store = storage_context(\"users\")):\n  add_value_to_responses_dict(incoming_texts_store, From, Body)\n  client = Client(variables.ACCOUNT_SID, variables.TWILIO_AUTH_TOKEN)\n  is_new_user = new_user(user_store, From)\n\n  # Was it a signup?\n  if is_new_user:\n    # sign up new user\n    user_store[From] = \"NoName\"\n    message = client.messages \\\n      .create(\n          body=\"Welcome to the BOYS.CLUB, where you get the latest on all things that you\u2019d rather us cover for you. No more boys club talk that keeps you out of the conversation. \\n \ud83e\udd4a Here a few things you can expect from us: \\n \ud83c\udfc0 The latest buzz on all things pop culture for featured games, so you know what people are laughing about in your Tuesday morning meetings. \\n \ud83c\udfc8 Headlines, close games, and players to know about (yes this will include photos of Jimmy G \ud83d\udd25). \\n \u26bd\ufe0f Important upcoming dates, so you\u2019re never stuck asking if anyone has weekend plans on the Friday before the Super Bowl (ouch, we\u2019ve all been there). \\n \u26be\ufe0f Interactive engagement on your side, send us a \ud83d\udc4d or \ud83d\udc4e for a quick pulse check on how our updates are sitting with you, send us \u2018MORE\u2019 and if we\u2019ve got it, we\u2019ll send follow up articles or tweets for more info, and of course \u2018STOP\u2019 at any time to end your boys.club membership.\",\n          from_='+14153580188',\n          # status_callback='https://9lfthysp.brev.dev/api/signup_welcome',\n          to=From\n        )\n  # Or feedback?\n  else:\n    message = client.messages \\\n      .create(\n          body=\"Thanks for the feedback, we are currently in Beta mode and working on getting more responsive. For questions or concerns, feel free to reach out to ella@boys.club or @boysclubtext on Twitter.\",\n          from_='+14153580188',\n          # status_callback='https://9lfthysp.brev.dev/api/sms',\n          to=From\n        )\n\n  return \"status: success.\"\n\n\n\n\ndef post(user: User, user_store = storage_context(\"users\")):\n  user_store[user.phone] = user.dict()\n  client = Client(variables.ACCOUNT_SID, variables.TWILIO_AUTH_TOKEN)\n  message = client.messages \\\n    .create(\n        body=\"Welcome to the BOYS.CLUB, where you get the latest on all things that you\u2019d rather us cover for you. No more boys club talk that keeps you out of the conversation. \\n \ud83e\udd4a Here a few things you can expect from us: \\n \ud83c\udfc0 The latest buzz on all things pop culture for featured games, so you know what people are laughing about in your Tuesday morning meetings. \\n \ud83c\udfc8 Headlines, close games, and players to know about (yes this will include photos of Jimmy G \ud83d\udd25). \\n \u26bd\ufe0f Important upcoming dates, so you\u2019re never stuck asking if anyone has weekend plans on the Friday before the Super Bowl (ouch, we\u2019ve all been there). \\n \u26be\ufe0f Interactive engagement on your side, send us a \ud83d\udc4d or \ud83d\udc4e for a quick pulse check on how our updates are sitting with you, send us \u2018MORE\u2019 and if we\u2019ve got it, we\u2019ll send follow up articles or tweets for more info, and of course \u2018STOP\u2019 at any time to end your boys.club membership.\",\n        from_='+14153580188',\n        status_callback='https://9lfthysp.brev.dev/api/signup_welcome',\n        to=user.phone\n      )\n\n  # print(message.sid)\n  return JSONResponse(status_code=201, content={\"status\": f\"{user.name} success.\"})", "create_date": "2021-01-08T01:15:29.307139+00:00", "id": "ep-d7cacdfe-f06b-4984-a209-fd81ba8eefcc", "methods": [], "name": "incoming_sms", "namespace": "9lfthysp", "project_id": "proj-37259d35-141f-42fb-bfce-6582a0085c22", "uri": "/api/incoming_sms"}]